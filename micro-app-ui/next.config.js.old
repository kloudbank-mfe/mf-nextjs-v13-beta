/** @type {import('next').NextConfig} */

const ModuleFederationPlugin = require('webpack').container.ModuleFederationPlugin;
const deps = require('./package.json').dependencies;

const DEFAULT_SHARE_SCOPE = {
  'react': {
    singleton: true,
    requiredVersion: false,
    eager: true,
  },
  'react/': {
    singleton: true,
    requiredVersion: false,
    eager: true,
  },
  'react-dom': {
    singleton: true,
    requiredVersion: false,
    eager: true,
  },
  'next/dynamic': {
    requiredVersion: false,
    singleton: true,
    eager: true,
  },
  'styled-jsx': {
    requiredVersion: false,
    singleton: true,
    eager: true,
  },
  'styled-jsx/style': {
    requiredVersion: false,
    singleton: true,
    eager: true,
  },
  'next/link': {
    requiredVersion: false,
    singleton: true,
    eager: true,
  },
  'next/router': {
    requiredVersion: false,
    singleton: true,
    eager: true,
  },
  'next/script': {
    requiredVersion: false,
    singleton: true,
    eager: true,
  },
  'next/head': {
    requiredVersion: false,
    singleton: true,
    eager: true,
  },
};

const federationConfig = {
  name: 'micro_ui',
  filename: 'static/chunks/remoteEntry.js',
  exposes: {
    "./AddressBar": "./ui/AddressBar",
    "./GlobalNav": "./ui/GlobalNav",
    "./VercelLogo": "./ui/VercelLogo",
  },
  shared: {
    ...DEFAULT_SHARE_SCOPE,
    // 'react-dom': {
    //   singleton: true,
    //   requiredVersion: deps['react-dom'],
    //   eager: true,
    // },
    // react: {
    //   singleton: true,
    //   requiredVersion: deps['react'],
    //   eager: true,
    // },
  },
};

const nextConfig = {
  reactStrictMode: true,
  experimental: {
    appDir: true,
  },
  webpack: (config, options) => {
    
    Object.assign(config.experiments, { topLevelAwait: true });

    if (!options.isServer) {
      config.plugins.push(
        new ModuleFederationPlugin({
          ...federationConfig,
        }),
      );
    }

    return config;
  },
};

module.exports = nextConfig;
